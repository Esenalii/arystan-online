package services

import (
	"errors"
	"rest-project/internal/models"
)

type StudentService struct{}

var (
	id       = 4
	students = []models.Student{
		{Id: 1, FullName: "–ú—É—Ä–∞—Ç–æ–≤ –ê–ª–∏—Ö–∞–Ω –°–µ–π–¥–∞—Ö–º–µ—Ç–æ–≤–∏—á", Birthdate: "2005-05-13", Age: 18},
		{Id: 2, FullName: "–ë–æ–ª–∞—Ç–æ–≤ –ê–∫–±–∞—Ä –ù—É—Ä–∫–µ–Ω–æ–≤–∏—á", Birthdate: "2000-07-22", Age: 23},
		{Id: 3, FullName: "–î–∞—É–ª–µ—Ç—Ö–∞–Ω–æ–≤–∞ –ê–π–Ω—É—Ä –ú—É—Ä–∞—Ç–æ–≤–Ω–∞", Birthdate: "2009-02-18", Age: 14},
	}
)

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
func (s *StudentService) GetAllStudents() []models.Student {
	return students
}

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ ID
func (s *StudentService) GetStudentById(id int) (models.Student, error) {
	for _, student := range students {
		if student.Id == id {
			return student, nil
		}
	}
	return models.Student{}, errors.New("student not found")
}

// üìå –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
func (s *StudentService) CreateStudent(studentEdit models.StudentEdit) models.Student {
	newStudent := models.Student{
		Id:        id,
		FullName:  studentEdit.FullName,
		Birthdate: studentEdit.Birthdate,
		Age:       studentEdit.Age,
	}

	id++
	students = append(students, newStudent)

	return newStudent
}

// üìå –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
func (s *StudentService) UpdateStudent(studentId int, studentEdit models.StudentEdit) (models.Student, error) {
	for i, student := range students {
		if student.Id == studentId {
			updatedStudent := models.Student{
				Id:        student.Id,
				FullName:  studentEdit.FullName,
				Birthdate: studentEdit.Birthdate,
				Age:       studentEdit.Age,
			}

			students[i] = updatedStudent
			return updatedStudent, nil
		}
	}
	return models.Student{}, errors.New("student not found")
}

// üìå –£–¥–∞–ª–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞
func (s *StudentService) DeleteStudent(studentId int) error {
	for i, student := range students {
		if student.Id == studentId {
			students = append(students[:i], students[i+1:]...)
			return nil
		}
	}
	return errors.New("student not found")
}
